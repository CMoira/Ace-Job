@page
@model AppSec_Assignment_2.Pages.ChangePasswordModel
@{
	ViewData["Title"] = "Change Password";
}
<head runat="server">
    <script type="text/javascript">
        function ValidateChangePassword() {
            var password = document.getElementById("ChangeNewPassword").value;
            var confirmPassword = document.getElementById("ChangeConfirmNewPassword").value;
            var errorSpan = document.getElementById("changePasswordError");
            var confirmErrorSpan = document.getElementById("confirmChangePasswordError");
            var strengthSpan = document.getElementById("changePasswordStrength");
            var submitButton = document.querySelector("button[type='submit']");

            // Password requirements
            const minLength = 12;
            const hasLowercase = /[a-z]/.test(password);
            const hasUppercase = /[A-Z]/.test(password);
            const hasDigit = /[0-9]/.test(password);
            const hasSpecialChar = /[!@("@")#$%^&*]/.test(password);

            // Error messages
            let errorMessage = "";
            let errorMessage2 = "";

            if (password.length < minLength) {
                errorMessage = "Password must be at least 12 characters long!";
            } else if (!hasLowercase) {
                errorMessage = "Password must contain at least one lowercase letter.";
            } else if (!hasUppercase) {
                errorMessage = "Password must contain at least one uppercase letter.";
            } else if (!hasDigit) {
                errorMessage = "Password must contain at least one digit.";
            } else if (!hasSpecialChar) {
                errorMessage = "Password must contain at least one special character.";
            } else if (password !== confirmPassword) {
                errorMessage2 = "Passwords do not match!";
            }

            // Display error messages
            if (errorMessage) {
                errorSpan.textContent = errorMessage;
                strengthSpan.textContent = "";
                submitButton.disabled = true;
            } 
            else {
                errorSpan.textContent = "";
                strengthSpan.textContent = "Password is strong!";
            }

            if (errorMessage2) {
                confirmErrorSpan.textContent = errorMessage2;
                submitButton.disabled = true;
            } else {
                confirmErrorSpan.textContent = "";
            }

            // Enable submit button only if everything is valid
            if (!errorMessage && !errorMessage2) {
                submitButton.disabled = false;
            }
        }
    </script>
</head>

<h2>Change Password</h2>

<form method="post">
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label asp-for="CPModel.CurrentPassword"></label>
        <input asp-for="CPModel.CurrentPassword" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="CPModel.NewPassword"></label>
        <input asp-for="CPModel.NewPassword" id="ChangeNewPassword" class="form-control" onkeyup="ValidateChangePassword();" />
        <span id="changePasswordStrength" class="text-success"></span>
        <span id="changePasswordError" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CPModel.ConfirmPassword"></label>
        <input asp-for="CPModel.ConfirmPassword" id="ChangeConfirmNewPassword" class="form-control" onkeyup="ValidateChangePassword();" />
        <span id="confirmChangePasswordError" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Change Password</button>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
			{
				<p>@error.ErrorMessage</p>
			}
        </div>
    }
</form>