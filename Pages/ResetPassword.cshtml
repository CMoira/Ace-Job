@page
@model AppSec_Assignment_2.Pages.ResetPasswordModel
@{
}

<head runat="server">
    <script type="text/javascript">
        function ValidateResetPassword() {
            var password = document.getElementById("ResetNewPassword").value;
            var confirmPassword = document.getElementById("ResetConfirmNewPassword").value;
            var errorSpan = document.getElementById("resetPasswordError");
            var confirmErrorSpan = document.getElementById("confirmResetPasswordError");
            var strengthSpan = document.getElementById("resetPasswordStrength");
            var submitButton = document.querySelector("button[type='submit']");

            // Password requirements
            const minLength = 12;
            const hasLowercase = /[a-z]/.test(password);
            const hasUppercase = /[A-Z]/.test(password);
            const hasDigit = /[0-9]/.test(password);
            const hasSpecialChar = /[!@("@")#$%^&*]/.test(password);

            // Error messages
            let errorMessage = "";
            let errorMessage2 = "";

            if (password.length < minLength) {
                errorMessage = "Password must be at least 12 characters long!";
            } else if (!hasLowercase) {
                errorMessage = "Password must contain at least one lowercase letter.";
            } else if (!hasUppercase) {
                errorMessage = "Password must contain at least one uppercase letter.";
            } else if (!hasDigit) {
                errorMessage = "Password must contain at least one digit.";
            } else if (!hasSpecialChar) {
                errorMessage = "Password must contain at least one special character.";
            } else if (password !== confirmPassword) {
                errorMessage2 = "Passwords do not match!";
            }

            // Display error messages
            if (errorMessage) {
                errorSpan.textContent = errorMessage;
                strengthSpan.textContent = "";
                submitButton.disabled = true;
            }
            else {
                errorSpan.textContent = "";
                strengthSpan.textContent = "Password is strong!";
            }

            if (errorMessage2) {
                confirmErrorSpan.textContent = errorMessage2;
                submitButton.disabled = true;
            } else {
                confirmErrorSpan.textContent = "";
            }

            // Enable submit button only if everything is valid
            if (!errorMessage && !errorMessage2) {
                submitButton.disabled = false;
            }
        }
    </script>
</head>

<div class="container mt-5">
    <h2 class="text-center">Reset Your Password</h2>
    <p class="text-center">Enter a new password for your account.</p>

    <form method="post" class="mt-4">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="RPModel.Email">
        <input type="hidden" asp-for="RPModel.Token">

        <div class="mb-3">
            <label asp-for="RPModel.NewPassword" class="form-label">New Password</label>
            <input asp-for="RPModel.NewPassword" class="form-control" id="ResetNewPassword" type="password" onkeyup="ValidateResetPassword();" />
            <span asp-validation-for="RPModel.NewPassword" class="text-danger"></span>
            <span id="resetPasswordStrength" class="text-success"></span>
            <span id="resetPasswordError" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="RPModel.ConfirmPassword" class="form-label">Confirm Password</label>
            <input asp-for="RPModel.ConfirmPassword" class="form-control" id="ResetConfirmNewPassword" type="password" onkeyup="ValidateResetPassword();" />
            <span asp-validation-for="RPModel.ConfirmPassword" class="text-danger"></span>
            <span id="confirmResetPasswordError" class="text-danger"></span>
        </div>

        <div asp-validation-summary="All" class="text-danger"></div>

        <button type="submit" class="btn btn-success w-100">Reset Password</button>


        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }
    </form>
</div>